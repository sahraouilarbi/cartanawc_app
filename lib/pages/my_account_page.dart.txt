import 'package:cartanawc_app/models/login_model.dart';
import 'package:cartanawc_app/pages/home_page.dart';
import 'package:cartanawc_app/pages/login_page.dart';
import 'package:cartanawc_app/shared_service.dart';
import 'package:cartanawc_app/utils/constants.dart';
import 'package:cartanawc_app/widgets/appbar_widget.dart';
import 'package:cartanawc_app/widgets/drawer_widget.dart';
import 'package:cartanawc_app/widgets/page_header_stack_widget.dart';
import 'package:cartanawc_app/widgets/textbuttom_widget.dart';
import 'package:flutter/material.dart';

class MyAccountPage extends StatefulWidget {
  const MyAccountPage({Key key}) : super(key: key);

  @override
  _MyAccountPageState createState() => _MyAccountPageState();
}

class _MyAccountPageState extends State<MyAccountPage> {
  @override
  Widget build(BuildContext context) {
    return FutureBuilder(
        future: SharedService.isLoggedIn(),
        builder: (context, AsyncSnapshot<bool> loginModel) {
          if (loginModel.hasData) {
            if (loginModel.data) {
              return _listView(context);
            } else {
              return LoginPage();
            }
          }
          return Center(
            child: Column(
              children: const [
                Text('MyAccount return CircularProgressIndicator'),
                CircularProgressIndicator(),
              ],
            ),
          );
        });
  }

  Widget _listView(BuildContext context) {
    return FutureBuilder(
      future: SharedService.loginDetails(),
      builder: (context, AsyncSnapshot<LoginResponseModel> loginModel) {
        if (loginModel.hasData) {
          return Scaffold(
            drawer: buildDrawer(context),
            appBar: buildAppBar(context, isUserProfilePage: true),
            body: SingleChildScrollView(
              child: Container(
                color: Colors.black,
                padding: const EdgeInsets.all(10.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.stretch,
                  children: [
                    pageHeaderStack(pageHeader: 'PROFIL'),
                    Container(
                      padding: const EdgeInsets.symmetric(
                          horizontal: 20.0, vertical: 50.0),
                      color: Colors.white,
                      child: Column(
                        children: [
                          buildLabelAndField(
                            'Nom',
                            labelColor: cartanaColorGrey,
                            fieldContent: loginModel.data.data.displayName,
                          ),
                          buildLabelAndField(
                            'Type',
                            labelColor: cartanaColorGrey,
                          ),
                          buildLabelAndField(
                            'Téléphone',
                            labelColor: cartanaColorGrey,
                          ),
                          buildLabelAndField('Email',
                              labelColor: cartanaColorGrey,
                              fieldContent: loginModel.data.data.email),
                          buildLabelAndField(
                            'Adresse',
                          ),
                          const SizedBox(
                            height: 15.0,
                          ),
                          Column(
                            children: [
                              const Text('informations non corrects ?'),
                              const SizedBox(height: 10.0),
                              textButton(
                                onPressed: () {},
                                text: 'MODIFIER',
                                textColor: Colors.white,
                                backgroundColor: Colors.black,
                              ),
                              const SizedBox(height: 10.0),
                              textButton(
                                onPressed: () {
                                  SharedService.logout();
                                  Navigator.pop(
                                    context,
                                    MaterialPageRoute(
                                      builder: (context) => const HomePage(),
                                    ),
                                  );
                                },
                                text: 'Se déconnecter',
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
            ),
          );
        }
        return const Center(
          child: CircularProgressIndicator(),
        );
      },
    );
  }

  Column buildLabelAndField(String label,
      {Color labelColor = Colors.black, String fieldContent = ''}) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          label,
          style: TextStyle(color: labelColor),
        ),
        Container(
            width: double.maxFinite,
            padding: const EdgeInsets.all(10.0),
            margin: const EdgeInsets.only(bottom: 20.0),
            decoration: BoxDecoration(
              border: Border.all(color: cartanaColorGrey),
              borderRadius: BorderRadius.circular(5.0),
            ),
            child: Text(fieldContent)),
      ],
    );
  }
}
